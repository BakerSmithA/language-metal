'scopeName': 'source.metal'
'name': 'Metal'
'fileTypes': ['al']
'patterns': [
    {
        'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
        'name': 'constant.numeric.metal'
    },
    {
        'begin': '\"'
        'end': '\"'
        'name': 'string.quoted.double.metal'
    },
    {
        'begin': '\''
        'end': '\''
        'name': 'string.quoted.single.metal'
    },
    {
        'comment': 'keywords that are used to operate on the tape'
        'name': 'meta.function.metal'
        'match': '\\b(read|write|left|right)\\b'
    },
    {
        'comment': 'keywords that are used to enter a halt state'
        'name': 'keyword.control.halt.metal'
        'match': '\\b(accept|reject)\\b'
    },
    {
        'comment': 'keywords that are used for assignment'
        'name': 'keyword.control.assign.metal'
        'match': '\\b(let)\\b'
    },
    {
        'comment': 'keywords that delimit flow conditionals'
        'name': 'keyword.control.conditional.metal'
        'match': '\\b(if|else)\\b'
    },
    {
        'comment': 'keywords that delimit loops'
        'name': 'keyword.control.repeat.metal'
        'match': '\\b(while)\\b'
    },
    {
        'comment': 'keyword operators that evaluate to True or False'
        'match': '\\b(and|not|or|True|False)\\b'
        'name': 'keyword.operator.logical.metal'
    },
    {
        'comment': 'keywords that haven\'t fit into other groups (yet).'
        'name': 'meta.function.metal'
        'match': '\\b(print)\\b'
    },
    {
        'match': '<\\=|>\\=|\\=\\=|<|>|\\!\\='
        'name': 'keyword.operator.comparison.metal'
    }
    {
        'match': '\\='
        'name': 'keyword.operator.assignment.metal'
    },
    {
        'match': '\\b(proc)\\s+([a-z]\\w*)'
        'captures':
            '1':
                'name': 'storage.type.function.metal'
            '2':
                'name': 'entity.name.function.metal'
        'name': 'meta.function.metal'
    },
    {
        'match': '(?:\\s+(\\w+):([A-Z]\\w*))'
        'captures':
            '1':
                'name': 'entity.name.parameter.metal'
            '2':
                'name': 'storage.type'
        'name': 'meta.function.arguments.metal'
    },
    {
        'match': '(struct)\\s+([A-Z]\\w*)'
        'captures':
            '1':
                'name': 'storage.type.struct.metal'
            '2':
                'name': 'entity.name.struct.metal'
    }
    {
        'match': '\\b(import)\\s+([A-Z]\\w*)([\\w\\.]+)?'
        'captures':
            '1':
                'name': 'keyword.control.import.metal'
            '2':
                'name': 'entity.name.import.metal'
            '3':
                'name': 'entity.name.import.metal'

        'name': 'meta.import.metal'
    },
    {
        'name': 'comment.block.metal'
        'match': '\\/\\/(.*)'
    },
    {
        'name': 'comment.block.metal'
        'begin': '\\/\\*'
        'end': '\\*\\/'
    },
    {
        'name': 'keyword.control.import'
        'match': '\\b(import)\\b'
    },

]
